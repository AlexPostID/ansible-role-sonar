---
sudo: required

env:
  global:
    # https://github.com/travis-ci/travis-ci/issues/6461#issuecomment-239577306
    DOCKER_VERSION: "1.9.1-0~trusty"
  matrix:
    - repository: geerlingguy/docker-centos7-ansible
      version: latest
      init: /usr/lib/systemd/systemd
      run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
      site: test-latest.yml
    - repository: geerlingguy/docker-centos7-ansible
      version: latest
      init: /usr/lib/systemd/systemd
      run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
      site: test-lts.yml
    - repository: geerlingguy/docker-ubuntu1404-ansible
      version: latest
      init: /sbin/init
      run_opts: ""
      site: test-latest.yml
    - repository: geerlingguy/docker-ubuntu1404-ansible
      version: latest
      init: /sbin/init
      run_opts: ""
      site: test-lts.yml

services:
  - docker

before_install:
  # Downgrade to older version of Docker engine.
  - sudo apt-get update
  - sudo apt-get remove docker-engine -yq
  - sudo apt-get install docker-engine=$DOCKER_VERSION -yq --no-install-suggests --no-install-recommends --force-yes -o Dpkg::Options::="--force-confnew"

  # Pull container.
  - 'sudo docker pull ${repository}:${version}'

script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro --volume /var/lib/mysql:/var/lib/mysql ${run_opts} ${repository}:${version} "${init}" > "${container_id}"'

  # Install dependencies.
  - 'sudo docker exec "$(cat ${container_id})" ansible-galaxy install -r /etc/ansible/roles/role_under_test/tests/requirements.yml'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/$site --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/$site'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/$site | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # SonarQube can take a while to start initially.
  - sleep 20

  # Make sure SonarQube is running.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm curl http://localhost:9000/'

after_success:
  # Clean up.
  - 'sudo docker stop "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
